body>h1 {
	font: 300 350%/1 var(--font-base);
	color: orange
}

@media (max-height: 10rem) {
	body>h1 {
		margin: 0
	}
}

body>h1 .home,
body>h1 .remote {
	display: inline-block;
	vertical-align: middle;
	padding: .3em .4em;
	border-radius: .3em;
	margin-left: .5em;
	background: hsl(200, 50%, 70%);
	color: white;
	text-transform: uppercase;
	font-size: 40%;
	font-weight: bold;
	letter-spacing: -.03em
}

body>h1 .home:hover,
body>h1 .remote:hover {
	background: var(--color-dark);
	text-decoration: none;
}

body>h1 .remote {
	background: hsl(200, 50%, 80%);
}

body {
	width: 80em;
	max-width: calc(100vw - 5em);
	padding-top: 2em;

	counter-reset: passed var(--pass, 0) failed var(--fail, 0) skipped var(--skipped, 0);
}

body>nav {
	position: fixed;
	top: 0;
	right: 0;
	left: 0;
	z-index: 3;
	display: flex;
	background: black;
	color: white;
	font: bold 150%/1 var(--font-base)
}

body>nav .home {
	padding: .4em .3em;
	font-size: 80%
}

body>nav .home:hover {
	text-decoration: none;
	background: #444;
}

body>nav .count-fail,
body>nav .count-pass,
body>nav .count-skipped {
	flex-shrink: 0;
	min-width: 0;
	align-items: center;
	padding: .2em;
	background: var(--dark-color);
	cursor: pointer;
	transition: .4s
}

body>nav .count-fail:not([hidden]),
body>nav .count-pass:not([hidden]),
body>nav .count-skipped:not([hidden]) {
	display: flex;
}

body>nav .count-pass .count::before {
	content: counter(passed);
}

body>nav .count-fail .count::before {
	content: counter(failed);
}

body>nav .count-skipped .count::before {
	content: counter(skipped);
}

body>nav .count-fail:is(.no-failed *),
body>nav .count-pass:is(.no-passed *),
body>nav .count-skipped:is(.no-skipped *) {
	display: none;
}

body>nav .nav:not([hidden]) {
	display: flex;
	align-items: center;
	margin-left: auto;
	font-size: 75%;
	line-height: 1;
	color: var(--color)
}

body>nav .nav:not([hidden]) button {
	padding: 0 .2em;
	background: transparent;
	border: none;
	color: inherit;
	font-size: inherit;
	line-height: 1;
	cursor: pointer;
}

body>nav .count::after {
	font-weight: 300;
	margin-left: .2em;
}

body>nav .count-fail {
	flex-grow: var(--fail, 1)
}

body>nav .count-fail .count::after {
	content: "failing";
}

body>nav .count-pass {
	flex-grow: var(--pass, 1)
}

body>nav .count-pass .count::after {
	content: "passing";
}

body>nav .count-skipped {
	flex-grow: var(--skipped, 1)
}

body>nav .count-skipped .count::after {
	content: "skipped";
}

body>nav[style*="--fail:0;"] .count-fail {
	display: none;
}

body>nav[style*="--pass:0;"] .count-pass {
	display: none;
}

body>nav[style*="--skipped:0;"] .count-skipped {
	display: none;
}

body>section {
	border: .2em solid var(--color-light);
	margin: .5em 0;
	padding: .5em;
	border-radius: .3em
}

body>section h1 {
	margin: 0;
}

body>section script[type="application/json"] {
	padding: .5em;
	background: var(--color-light);
	display: block;
	font-family: monospace;
	white-space: pre;
}

body>section>p,
.notice {
	width: max-content;
	max-width: 100%;
	box-sizing: border-box;
	padding: .4em 1em;
	background: var(--color-light);
	font-style: italic;
	border-radius: .2em;
}

body>section>p::before {
	content: "Instructions: ";
	font-size: 80%;
	font-weight: bold;
	font-style: normal;
	text-transform: uppercase;
}

body>section>p.note::before {
	content: "Note: ";
}

table.reftest tr {
	display: flex;
}

table.reftest tbody>tr,
table.reftest>tr {
	border: 1px solid hsla(0, 0%, 0%, .1)
}

table.reftest tbody>tr:not([class]),
table.reftest>tr:not([class]) {
	--color: rgba(0, 0, 0, .06);
	--dark-color: rgba(0, 0, 0, .3);
}

table.reftest td,
table.reftest th {
	flex: 1;
}

table.reftest th {
	padding: 0;
	color: gray;
}

table.reftest td {
	padding: .4em;
}

table.reftest td:not(:last-child) {
	border-right: 1px solid hsla(0, 0%, 0%, .1);
}

table.reftest td[data-error-stack] {
	display: flex;
	align-items: center;
	justify-content: space-between;
	gap: .5em;
	color: var(--dark-color)
}

table.reftest td[data-error-stack]::after {
	content: "";
	height: 1.1lh;
	aspect-ratio: 1;
	background-color: currentColor;
	/* Icon source: https: //icon-sets.iconify.design/?query=console */
	--svg: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><title>Click to log the error stack to the console</title><path fill="currentColor" fill-rule="evenodd" d="M20 19V7H4v12zm0-16a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2zm-7 14v-2h5v2zm-3.42-4L5.57 9H8.4l3.3 3.3c.39.39.39 1.03 0 1.42L8.42 17H5.59z"/></svg>');
	mask-image: var(--svg);
	mask-repeat: no-repeat;
	mask-size: 100% 100%;
	cursor: pointer;
}

table.reftest tr {
	position: relative;
	margin: .4em 0;
	background: var(--color);
	scroll-margin-top: 2.5rem
}

table.reftest tr[data-time]::after {
	content: attr(data-time);
	position: absolute;
	top: 0;
	right: 0;
	z-index: 1;
	padding: .4em;
	color: var(--dark-color);
	font: bold 75%/1 var(--font-base);
	text-shadow: 0 0 1px white, 0 0 2px white;
}

table.reftest.skipped tr,
table.reftest tr.skipped {
	--append: " (Skipped)"
}

table.reftest.skipped tr.fail,
table.reftest tr.skipped.fail {
	--append: " (skipped)"
}

table.reftest tr[title] td,
table.reftest.skipped tr td,
table.reftest tr.skipped td {
	padding-top: 1.5em;
}

table.reftest tr[title]::before,
table.reftest.skipped tr::before,
table.reftest tr.skipped::before {
	content: attr(title) var(--append, "");
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	padding: .4em;
	background: linear-gradient(to right, var(--dark-color), transparent);
	color: white;
	font: bold 75%/1 var(--font-base);
	text-shadow: 0 0 1px rgba(0, 0, 0, .5);
}

body>section>div {
	border: 1px solid rgba(0, 0, 0, .15);
	background: rgba(0, 0, 0, .06);
	padding: .5em;
	margin: .5em
}

body>section>div[title] {
	position: relative
}

body>section>div[title]::before {
	content: attr(title);
	display: block;
	padding: .4em;
	margin: -.66em;
	margin-bottom: .8em;
	background: linear-gradient(to right, rgba(0, 0, 0, .4), transparent);
	color: white;
	font: bold 75%/1 var(--font-base);
	text-shadow: 0 0 1px rgba(0, 0, 0, .5);
}
